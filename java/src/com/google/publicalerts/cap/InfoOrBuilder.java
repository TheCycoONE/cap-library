// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cap.proto

package com.google.publicalerts.cap;

public interface InfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:publicalerts.cap.Info)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * RFC 3066 language code.
   * </pre>
   *
   * <code>optional string language = 1 [default = "en-US"];</code>
   */
  boolean hasLanguage();
  /**
   * <pre>
   * RFC 3066 language code.
   * </pre>
   *
   * <code>optional string language = 1 [default = "en-US"];</code>
   */
  java.lang.String getLanguage();
  /**
   * <pre>
   * RFC 3066 language code.
   * </pre>
   *
   * <code>optional string language = 1 [default = "en-US"];</code>
   */
  com.google.protobuf.ByteString
      getLanguageBytes();

  /**
   * <pre>
   * The code denoting the category of the subject event of the alert
   * message. Required as of CAP 1.1.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info.Category category = 2;</code>
   */
  java.util.List<com.google.publicalerts.cap.Info.Category> getCategoryList();
  /**
   * <pre>
   * The code denoting the category of the subject event of the alert
   * message. Required as of CAP 1.1.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info.Category category = 2;</code>
   */
  int getCategoryCount();
  /**
   * <pre>
   * The code denoting the category of the subject event of the alert
   * message. Required as of CAP 1.1.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info.Category category = 2;</code>
   */
  com.google.publicalerts.cap.Info.Category getCategory(int index);

  /**
   * <pre>
   * The text denoting the type of the subject event of the alert message.
   * </pre>
   *
   * <code>required string event = 3;</code>
   */
  boolean hasEvent();
  /**
   * <pre>
   * The text denoting the type of the subject event of the alert message.
   * </pre>
   *
   * <code>required string event = 3;</code>
   */
  java.lang.String getEvent();
  /**
   * <pre>
   * The text denoting the type of the subject event of the alert message.
   * </pre>
   *
   * <code>required string event = 3;</code>
   */
  com.google.protobuf.ByteString
      getEventBytes();

  /**
   * <pre>
   * The code denoting the type of action recommended for the target
   * audience. Added in CAP 1.1
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info.ResponseType response_type = 4;</code>
   */
  java.util.List<com.google.publicalerts.cap.Info.ResponseType> getResponseTypeList();
  /**
   * <pre>
   * The code denoting the type of action recommended for the target
   * audience. Added in CAP 1.1
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info.ResponseType response_type = 4;</code>
   */
  int getResponseTypeCount();
  /**
   * <pre>
   * The code denoting the type of action recommended for the target
   * audience. Added in CAP 1.1
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info.ResponseType response_type = 4;</code>
   */
  com.google.publicalerts.cap.Info.ResponseType getResponseType(int index);

  /**
   * <pre>
   * The code denoting the urgency of the subject event of the alert message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Info.Urgency urgency = 5;</code>
   */
  boolean hasUrgency();
  /**
   * <pre>
   * The code denoting the urgency of the subject event of the alert message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Info.Urgency urgency = 5;</code>
   */
  com.google.publicalerts.cap.Info.Urgency getUrgency();

  /**
   * <pre>
   * The code denoting the severity of the subject event of the alert
   * message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Info.Severity severity = 6;</code>
   */
  boolean hasSeverity();
  /**
   * <pre>
   * The code denoting the severity of the subject event of the alert
   * message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Info.Severity severity = 6;</code>
   */
  com.google.publicalerts.cap.Info.Severity getSeverity();

  /**
   * <pre>
   * The code denoting the certainty of the subject event of the alert
   * message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Info.Certainty certainty = 7;</code>
   */
  boolean hasCertainty();
  /**
   * <pre>
   * The code denoting the certainty of the subject event of the alert
   * message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Info.Certainty certainty = 7;</code>
   */
  com.google.publicalerts.cap.Info.Certainty getCertainty();

  /**
   * <pre>
   * The text describing the intended audience of the alert message.
   * </pre>
   *
   * <code>optional string audience = 8;</code>
   */
  boolean hasAudience();
  /**
   * <pre>
   * The text describing the intended audience of the alert message.
   * </pre>
   *
   * <code>optional string audience = 8;</code>
   */
  java.lang.String getAudience();
  /**
   * <pre>
   * The text describing the intended audience of the alert message.
   * </pre>
   *
   * <code>optional string audience = 8;</code>
   */
  com.google.protobuf.ByteString
      getAudienceBytes();

  /**
   * <pre>
   * A system-specific code identifying the event type of the alert message,
   * where the content of ?valueName? is a user-assigned string designating
   * the domain of the code, and the content of ?value? is a string (which
   * may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair event_code = 9;</code>
   */
  java.util.List<com.google.publicalerts.cap.ValuePair> 
      getEventCodeList();
  /**
   * <pre>
   * A system-specific code identifying the event type of the alert message,
   * where the content of ?valueName? is a user-assigned string designating
   * the domain of the code, and the content of ?value? is a string (which
   * may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair event_code = 9;</code>
   */
  com.google.publicalerts.cap.ValuePair getEventCode(int index);
  /**
   * <pre>
   * A system-specific code identifying the event type of the alert message,
   * where the content of ?valueName? is a user-assigned string designating
   * the domain of the code, and the content of ?value? is a string (which
   * may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair event_code = 9;</code>
   */
  int getEventCodeCount();
  /**
   * <pre>
   * A system-specific code identifying the event type of the alert message,
   * where the content of ?valueName? is a user-assigned string designating
   * the domain of the code, and the content of ?value? is a string (which
   * may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair event_code = 9;</code>
   */
  java.util.List<? extends com.google.publicalerts.cap.ValuePairOrBuilder> 
      getEventCodeOrBuilderList();
  /**
   * <pre>
   * A system-specific code identifying the event type of the alert message,
   * where the content of ?valueName? is a user-assigned string designating
   * the domain of the code, and the content of ?value? is a string (which
   * may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair event_code = 9;</code>
   */
  com.google.publicalerts.cap.ValuePairOrBuilder getEventCodeOrBuilder(
      int index);

  /**
   * <pre>
   * The effective time of the information of the alert message.
   * If this item is not included, the effective time SHALL be assumed to be
   * the same as in Alert#sent.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string effective = 10;</code>
   */
  boolean hasEffective();
  /**
   * <pre>
   * The effective time of the information of the alert message.
   * If this item is not included, the effective time SHALL be assumed to be
   * the same as in Alert#sent.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string effective = 10;</code>
   */
  java.lang.String getEffective();
  /**
   * <pre>
   * The effective time of the information of the alert message.
   * If this item is not included, the effective time SHALL be assumed to be
   * the same as in Alert#sent.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string effective = 10;</code>
   */
  com.google.protobuf.ByteString
      getEffectiveBytes();

  /**
   * <pre>
   * The expected time of the beginning of the subject event of alert message
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string onset = 11;</code>
   */
  boolean hasOnset();
  /**
   * <pre>
   * The expected time of the beginning of the subject event of alert message
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string onset = 11;</code>
   */
  java.lang.String getOnset();
  /**
   * <pre>
   * The expected time of the beginning of the subject event of alert message
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string onset = 11;</code>
   */
  com.google.protobuf.ByteString
      getOnsetBytes();

  /**
   * <pre>
   * The expiry time of the information of the alert message.
   * If this item is not provided, each recipient is free to set its own
   * policy as to when the message is no longer in effect.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string expires = 12;</code>
   */
  boolean hasExpires();
  /**
   * <pre>
   * The expiry time of the information of the alert message.
   * If this item is not provided, each recipient is free to set its own
   * policy as to when the message is no longer in effect.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string expires = 12;</code>
   */
  java.lang.String getExpires();
  /**
   * <pre>
   * The expiry time of the information of the alert message.
   * If this item is not provided, each recipient is free to set its own
   * policy as to when the message is no longer in effect.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>optional string expires = 12;</code>
   */
  com.google.protobuf.ByteString
      getExpiresBytes();

  /**
   * <pre>
   * The human-readable name of the agency or authority issuing this alert.
   * </pre>
   *
   * <code>optional string sender_name = 13;</code>
   */
  boolean hasSenderName();
  /**
   * <pre>
   * The human-readable name of the agency or authority issuing this alert.
   * </pre>
   *
   * <code>optional string sender_name = 13;</code>
   */
  java.lang.String getSenderName();
  /**
   * <pre>
   * The human-readable name of the agency or authority issuing this alert.
   * </pre>
   *
   * <code>optional string sender_name = 13;</code>
   */
  com.google.protobuf.ByteString
      getSenderNameBytes();

  /**
   * <pre>
   * A brief human-readable headline.  Note that some displays (for example,
   * short messaging service devices) may only present this headline; it
   * SHOULD be made as direct and actionable as possible while remaining
   * short.  160 characters MAY be a useful target limit for headline length.
   * </pre>
   *
   * <code>optional string headline = 14;</code>
   */
  boolean hasHeadline();
  /**
   * <pre>
   * A brief human-readable headline.  Note that some displays (for example,
   * short messaging service devices) may only present this headline; it
   * SHOULD be made as direct and actionable as possible while remaining
   * short.  160 characters MAY be a useful target limit for headline length.
   * </pre>
   *
   * <code>optional string headline = 14;</code>
   */
  java.lang.String getHeadline();
  /**
   * <pre>
   * A brief human-readable headline.  Note that some displays (for example,
   * short messaging service devices) may only present this headline; it
   * SHOULD be made as direct and actionable as possible while remaining
   * short.  160 characters MAY be a useful target limit for headline length.
   * </pre>
   *
   * <code>optional string headline = 14;</code>
   */
  com.google.protobuf.ByteString
      getHeadlineBytes();

  /**
   * <pre>
   * An extended human readable description of the hazard or event that
   * occasioned this message.
   * </pre>
   *
   * <code>optional string description = 15;</code>
   */
  boolean hasDescription();
  /**
   * <pre>
   * An extended human readable description of the hazard or event that
   * occasioned this message.
   * </pre>
   *
   * <code>optional string description = 15;</code>
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * An extended human readable description of the hazard or event that
   * occasioned this message.
   * </pre>
   *
   * <code>optional string description = 15;</code>
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * An extended human readable instruction to targeted recipients.  (If
   * different instructions are intended for different recipients, they
   * should be represented by use of multiple &lt;info&gt; blocks.
   * </pre>
   *
   * <code>optional string instruction = 16;</code>
   */
  boolean hasInstruction();
  /**
   * <pre>
   * An extended human readable instruction to targeted recipients.  (If
   * different instructions are intended for different recipients, they
   * should be represented by use of multiple &lt;info&gt; blocks.
   * </pre>
   *
   * <code>optional string instruction = 16;</code>
   */
  java.lang.String getInstruction();
  /**
   * <pre>
   * An extended human readable instruction to targeted recipients.  (If
   * different instructions are intended for different recipients, they
   * should be represented by use of multiple &lt;info&gt; blocks.
   * </pre>
   *
   * <code>optional string instruction = 16;</code>
   */
  com.google.protobuf.ByteString
      getInstructionBytes();

  /**
   * <pre>
   * A full, absolute URI for an HTML page or other text resource with
   * additional or reference information regarding this alert.
   * </pre>
   *
   * <code>optional string web = 17;</code>
   */
  boolean hasWeb();
  /**
   * <pre>
   * A full, absolute URI for an HTML page or other text resource with
   * additional or reference information regarding this alert.
   * </pre>
   *
   * <code>optional string web = 17;</code>
   */
  java.lang.String getWeb();
  /**
   * <pre>
   * A full, absolute URI for an HTML page or other text resource with
   * additional or reference information regarding this alert.
   * </pre>
   *
   * <code>optional string web = 17;</code>
   */
  com.google.protobuf.ByteString
      getWebBytes();

  /**
   * <pre>
   * The text describing the contact for follow-up and confirmation of
   * the alert message.
   * </pre>
   *
   * <code>optional string contact = 18;</code>
   */
  boolean hasContact();
  /**
   * <pre>
   * The text describing the contact for follow-up and confirmation of
   * the alert message.
   * </pre>
   *
   * <code>optional string contact = 18;</code>
   */
  java.lang.String getContact();
  /**
   * <pre>
   * The text describing the contact for follow-up and confirmation of
   * the alert message.
   * </pre>
   *
   * <code>optional string contact = 18;</code>
   */
  com.google.protobuf.ByteString
      getContactBytes();

  /**
   * <pre>
   * A system-specific additional parameter associated with the alert
   * message, where the content of ?valueName? is a user-assigned string
   * designating the domain of the code, and the content of ?value? is a
   * string (which may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair parameter = 19;</code>
   */
  java.util.List<com.google.publicalerts.cap.ValuePair> 
      getParameterList();
  /**
   * <pre>
   * A system-specific additional parameter associated with the alert
   * message, where the content of ?valueName? is a user-assigned string
   * designating the domain of the code, and the content of ?value? is a
   * string (which may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair parameter = 19;</code>
   */
  com.google.publicalerts.cap.ValuePair getParameter(int index);
  /**
   * <pre>
   * A system-specific additional parameter associated with the alert
   * message, where the content of ?valueName? is a user-assigned string
   * designating the domain of the code, and the content of ?value? is a
   * string (which may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair parameter = 19;</code>
   */
  int getParameterCount();
  /**
   * <pre>
   * A system-specific additional parameter associated with the alert
   * message, where the content of ?valueName? is a user-assigned string
   * designating the domain of the code, and the content of ?value? is a
   * string (which may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair parameter = 19;</code>
   */
  java.util.List<? extends com.google.publicalerts.cap.ValuePairOrBuilder> 
      getParameterOrBuilderList();
  /**
   * <pre>
   * A system-specific additional parameter associated with the alert
   * message, where the content of ?valueName? is a user-assigned string
   * designating the domain of the code, and the content of ?value? is a
   * string (which may represent a number) denoting the value itself
   * (e.g., valueName="SAME" and value="CEM")
   * </pre>
   *
   * <code>repeated .publicalerts.cap.ValuePair parameter = 19;</code>
   */
  com.google.publicalerts.cap.ValuePairOrBuilder getParameterOrBuilder(
      int index);

  /**
   * <pre>
   * Refers to an additional file with supplemental information related to
   * this &lt;info&gt; element; e.g. an image or audio file
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Resource resource = 20;</code>
   */
  java.util.List<com.google.publicalerts.cap.Resource> 
      getResourceList();
  /**
   * <pre>
   * Refers to an additional file with supplemental information related to
   * this &lt;info&gt; element; e.g. an image or audio file
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Resource resource = 20;</code>
   */
  com.google.publicalerts.cap.Resource getResource(int index);
  /**
   * <pre>
   * Refers to an additional file with supplemental information related to
   * this &lt;info&gt; element; e.g. an image or audio file
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Resource resource = 20;</code>
   */
  int getResourceCount();
  /**
   * <pre>
   * Refers to an additional file with supplemental information related to
   * this &lt;info&gt; element; e.g. an image or audio file
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Resource resource = 20;</code>
   */
  java.util.List<? extends com.google.publicalerts.cap.ResourceOrBuilder> 
      getResourceOrBuilderList();
  /**
   * <pre>
   * Refers to an additional file with supplemental information related to
   * this &lt;info&gt; element; e.g. an image or audio file
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Resource resource = 20;</code>
   */
  com.google.publicalerts.cap.ResourceOrBuilder getResourceOrBuilder(
      int index);

  /**
   * <pre>
   * Multiple occurrences permitted, in which case the target area for the
   * &lt;info&gt; block is the union of all the included &lt;area&gt; blocks
   * If multiple &lt;polygon&gt;, &lt;circle&gt; or &lt;geocode&gt; elements are included, the
   * area described by this &lt;area&gt; is the union of those represented by the
   * included elements.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Area area = 21;</code>
   */
  java.util.List<com.google.publicalerts.cap.Area> 
      getAreaList();
  /**
   * <pre>
   * Multiple occurrences permitted, in which case the target area for the
   * &lt;info&gt; block is the union of all the included &lt;area&gt; blocks
   * If multiple &lt;polygon&gt;, &lt;circle&gt; or &lt;geocode&gt; elements are included, the
   * area described by this &lt;area&gt; is the union of those represented by the
   * included elements.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Area area = 21;</code>
   */
  com.google.publicalerts.cap.Area getArea(int index);
  /**
   * <pre>
   * Multiple occurrences permitted, in which case the target area for the
   * &lt;info&gt; block is the union of all the included &lt;area&gt; blocks
   * If multiple &lt;polygon&gt;, &lt;circle&gt; or &lt;geocode&gt; elements are included, the
   * area described by this &lt;area&gt; is the union of those represented by the
   * included elements.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Area area = 21;</code>
   */
  int getAreaCount();
  /**
   * <pre>
   * Multiple occurrences permitted, in which case the target area for the
   * &lt;info&gt; block is the union of all the included &lt;area&gt; blocks
   * If multiple &lt;polygon&gt;, &lt;circle&gt; or &lt;geocode&gt; elements are included, the
   * area described by this &lt;area&gt; is the union of those represented by the
   * included elements.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Area area = 21;</code>
   */
  java.util.List<? extends com.google.publicalerts.cap.AreaOrBuilder> 
      getAreaOrBuilderList();
  /**
   * <pre>
   * Multiple occurrences permitted, in which case the target area for the
   * &lt;info&gt; block is the union of all the included &lt;area&gt; blocks
   * If multiple &lt;polygon&gt;, &lt;circle&gt; or &lt;geocode&gt; elements are included, the
   * area described by this &lt;area&gt; is the union of those represented by the
   * included elements.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Area area = 21;</code>
   */
  com.google.publicalerts.cap.AreaOrBuilder getAreaOrBuilder(
      int index);
}
