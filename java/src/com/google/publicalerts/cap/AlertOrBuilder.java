// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cap.proto

package com.google.publicalerts.cap;

public interface AlertOrBuilder extends
    // @@protoc_insertion_point(interface_extends:publicalerts.cap.Alert)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * XML Namespace of the alert.
   * 1.0: xmlns="http://www.incident.com/cap/1.0"
   * 1.1: xmlns="urn:oasis:names:tc:emergency:cap:1.1"
   * 1.2: xmlns="urn:oasis:names:tc:emergency:cap:1.2"
   * </pre>
   *
   * <code>required string xmlns = 1;</code>
   */
  boolean hasXmlns();
  /**
   * <pre>
   * XML Namespace of the alert.
   * 1.0: xmlns="http://www.incident.com/cap/1.0"
   * 1.1: xmlns="urn:oasis:names:tc:emergency:cap:1.1"
   * 1.2: xmlns="urn:oasis:names:tc:emergency:cap:1.2"
   * </pre>
   *
   * <code>required string xmlns = 1;</code>
   */
  java.lang.String getXmlns();
  /**
   * <pre>
   * XML Namespace of the alert.
   * 1.0: xmlns="http://www.incident.com/cap/1.0"
   * 1.1: xmlns="urn:oasis:names:tc:emergency:cap:1.1"
   * 1.2: xmlns="urn:oasis:names:tc:emergency:cap:1.2"
   * </pre>
   *
   * <code>required string xmlns = 1;</code>
   */
  com.google.protobuf.ByteString
      getXmlnsBytes();

  /**
   * <pre>
   * A number or string uniquely identifying this message, assigned by the
   * sender. MUST NOT include spaces, commas or restricted characters (&lt; and &amp;)
   * </pre>
   *
   * <code>required string identifier = 2;</code>
   */
  boolean hasIdentifier();
  /**
   * <pre>
   * A number or string uniquely identifying this message, assigned by the
   * sender. MUST NOT include spaces, commas or restricted characters (&lt; and &amp;)
   * </pre>
   *
   * <code>required string identifier = 2;</code>
   */
  java.lang.String getIdentifier();
  /**
   * <pre>
   * A number or string uniquely identifying this message, assigned by the
   * sender. MUST NOT include spaces, commas or restricted characters (&lt; and &amp;)
   * </pre>
   *
   * <code>required string identifier = 2;</code>
   */
  com.google.protobuf.ByteString
      getIdentifierBytes();

  /**
   * <pre>
   * Identifies the originator of this alert. Guaranteed by assigner to be
   * unique globally; e.g., may be based on an Internet domain name.
   * MUST NOT include spaces, commas or restricted characters (&lt; and &amp;)
   * </pre>
   *
   * <code>required string sender = 3;</code>
   */
  boolean hasSender();
  /**
   * <pre>
   * Identifies the originator of this alert. Guaranteed by assigner to be
   * unique globally; e.g., may be based on an Internet domain name.
   * MUST NOT include spaces, commas or restricted characters (&lt; and &amp;)
   * </pre>
   *
   * <code>required string sender = 3;</code>
   */
  java.lang.String getSender();
  /**
   * <pre>
   * Identifies the originator of this alert. Guaranteed by assigner to be
   * unique globally; e.g., may be based on an Internet domain name.
   * MUST NOT include spaces, commas or restricted characters (&lt; and &amp;)
   * </pre>
   *
   * <code>required string sender = 3;</code>
   */
  com.google.protobuf.ByteString
      getSenderBytes();

  /**
   * <pre>
   * DEPRECATED as of CAP 1.1 and a security risk in CAP 1.0
   * </pre>
   *
   * <code>optional string password = 4 [deprecated = true];</code>
   */
  @java.lang.Deprecated boolean hasPassword();
  /**
   * <pre>
   * DEPRECATED as of CAP 1.1 and a security risk in CAP 1.0
   * </pre>
   *
   * <code>optional string password = 4 [deprecated = true];</code>
   */
  @java.lang.Deprecated java.lang.String getPassword();
  /**
   * <pre>
   * DEPRECATED as of CAP 1.1 and a security risk in CAP 1.0
   * </pre>
   *
   * <code>optional string password = 4 [deprecated = true];</code>
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getPasswordBytes();

  /**
   * <pre>
   * The time and date of the origination of the alert message.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>required string sent = 5;</code>
   */
  boolean hasSent();
  /**
   * <pre>
   * The time and date of the origination of the alert message.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>required string sent = 5;</code>
   */
  java.lang.String getSent();
  /**
   * <pre>
   * The time and date of the origination of the alert message.
   * The date and time is represented in [dateTime] format
   * (e. g., "2002-05-24T16:49:00-07:00" for 24 May 2002 at
   * 16: 49 PDT).  Alphabetic timezone designators such as "Z"
   * MUST NOT be used.  The timezone for UTC MUST be represented
   * as "-00:00" or "+00:00".
   * </pre>
   *
   * <code>required string sent = 5;</code>
   */
  com.google.protobuf.ByteString
      getSentBytes();

  /**
   * <pre>
   * The code denoting the appropriate handling of the alert message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Alert.Status status = 6;</code>
   */
  boolean hasStatus();
  /**
   * <pre>
   * The code denoting the appropriate handling of the alert message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Alert.Status status = 6;</code>
   */
  com.google.publicalerts.cap.Alert.Status getStatus();

  /**
   * <pre>
   * The code denoting the nature of the alert message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Alert.MsgType msg_type = 7;</code>
   */
  boolean hasMsgType();
  /**
   * <pre>
   * The code denoting the nature of the alert message.
   * </pre>
   *
   * <code>required .publicalerts.cap.Alert.MsgType msg_type = 7;</code>
   */
  com.google.publicalerts.cap.Alert.MsgType getMsgType();

  /**
   * <pre>
   * The text identifying the source of the alert message.
   * </pre>
   *
   * <code>optional string source = 8;</code>
   */
  boolean hasSource();
  /**
   * <pre>
   * The text identifying the source of the alert message.
   * </pre>
   *
   * <code>optional string source = 8;</code>
   */
  java.lang.String getSource();
  /**
   * <pre>
   * The text identifying the source of the alert message.
   * </pre>
   *
   * <code>optional string source = 8;</code>
   */
  com.google.protobuf.ByteString
      getSourceBytes();

  /**
   * <pre>
   * The code denoting the intended distribution of the alert message.
   * Mandatory as of CAP 1.1.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Alert.Scope scope = 9;</code>
   */
  boolean hasScope();
  /**
   * <pre>
   * The code denoting the intended distribution of the alert message.
   * Mandatory as of CAP 1.1.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Alert.Scope scope = 9;</code>
   */
  com.google.publicalerts.cap.Alert.Scope getScope();

  /**
   * <pre>
   * The text describing the rule for limiting distribution of the restricted
   * alert message.
   * Used when &lt;scope&gt; value is "Restricted"
   * </pre>
   *
   * <code>optional string restriction = 10;</code>
   */
  boolean hasRestriction();
  /**
   * <pre>
   * The text describing the rule for limiting distribution of the restricted
   * alert message.
   * Used when &lt;scope&gt; value is "Restricted"
   * </pre>
   *
   * <code>optional string restriction = 10;</code>
   */
  java.lang.String getRestriction();
  /**
   * <pre>
   * The text describing the rule for limiting distribution of the restricted
   * alert message.
   * Used when &lt;scope&gt; value is "Restricted"
   * </pre>
   *
   * <code>optional string restriction = 10;</code>
   */
  com.google.protobuf.ByteString
      getRestrictionBytes();

  /**
   * <pre>
   * The group listing of intended recipients of the private alert message.
   * Used when &lt;scope&gt; value is "Private". Each recipient SHALL be identified
   * by an identifier or an address.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group addresses = 11;</code>
   */
  boolean hasAddresses();
  /**
   * <pre>
   * The group listing of intended recipients of the private alert message.
   * Used when &lt;scope&gt; value is "Private". Each recipient SHALL be identified
   * by an identifier or an address.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group addresses = 11;</code>
   */
  com.google.publicalerts.cap.Group getAddresses();
  /**
   * <pre>
   * The group listing of intended recipients of the private alert message.
   * Used when &lt;scope&gt; value is "Private". Each recipient SHALL be identified
   * by an identifier or an address.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group addresses = 11;</code>
   */
  com.google.publicalerts.cap.GroupOrBuilder getAddressesOrBuilder();

  /**
   * <pre>
   * Any user-defined flag or special code used to flag the alert message for
   * special handling.
   * </pre>
   *
   * <code>repeated string code = 12;</code>
   */
  java.util.List<java.lang.String>
      getCodeList();
  /**
   * <pre>
   * Any user-defined flag or special code used to flag the alert message for
   * special handling.
   * </pre>
   *
   * <code>repeated string code = 12;</code>
   */
  int getCodeCount();
  /**
   * <pre>
   * Any user-defined flag or special code used to flag the alert message for
   * special handling.
   * </pre>
   *
   * <code>repeated string code = 12;</code>
   */
  java.lang.String getCode(int index);
  /**
   * <pre>
   * Any user-defined flag or special code used to flag the alert message for
   * special handling.
   * </pre>
   *
   * <code>repeated string code = 12;</code>
   */
  com.google.protobuf.ByteString
      getCodeBytes(int index);

  /**
   * <pre>
   * The message note is primarily intended for use with &lt;status&gt; "Exercise"
   * and &lt;msgtype&gt; "Error".
   * </pre>
   *
   * <code>optional string note = 13;</code>
   */
  boolean hasNote();
  /**
   * <pre>
   * The message note is primarily intended for use with &lt;status&gt; "Exercise"
   * and &lt;msgtype&gt; "Error".
   * </pre>
   *
   * <code>optional string note = 13;</code>
   */
  java.lang.String getNote();
  /**
   * <pre>
   * The message note is primarily intended for use with &lt;status&gt; "Exercise"
   * and &lt;msgtype&gt; "Error".
   * </pre>
   *
   * <code>optional string note = 13;</code>
   */
  com.google.protobuf.ByteString
      getNoteBytes();

  /**
   * <pre>
   * The group listing identifying earlier message(s) referenced by the alert
   * message. The extended message identifier(s) (in the form
   * sender,identifier,sent) of an earlier CAP message or messages referenced
   * by this one. If multiple messages are referenced, they SHALL be separated
   * by whitespace.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group references = 14;</code>
   */
  boolean hasReferences();
  /**
   * <pre>
   * The group listing identifying earlier message(s) referenced by the alert
   * message. The extended message identifier(s) (in the form
   * sender,identifier,sent) of an earlier CAP message or messages referenced
   * by this one. If multiple messages are referenced, they SHALL be separated
   * by whitespace.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group references = 14;</code>
   */
  com.google.publicalerts.cap.Group getReferences();
  /**
   * <pre>
   * The group listing identifying earlier message(s) referenced by the alert
   * message. The extended message identifier(s) (in the form
   * sender,identifier,sent) of an earlier CAP message or messages referenced
   * by this one. If multiple messages are referenced, they SHALL be separated
   * by whitespace.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group references = 14;</code>
   */
  com.google.publicalerts.cap.GroupOrBuilder getReferencesOrBuilder();

  /**
   * <pre>
   * The group listing naming the referent incident(s) of the alert message.
   * Used to collate multiple messages referring to different aspects of the
   * same incident.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group incidents = 15;</code>
   */
  boolean hasIncidents();
  /**
   * <pre>
   * The group listing naming the referent incident(s) of the alert message.
   * Used to collate multiple messages referring to different aspects of the
   * same incident.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group incidents = 15;</code>
   */
  com.google.publicalerts.cap.Group getIncidents();
  /**
   * <pre>
   * The group listing naming the referent incident(s) of the alert message.
   * Used to collate multiple messages referring to different aspects of the
   * same incident.
   * </pre>
   *
   * <code>optional .publicalerts.cap.Group incidents = 15;</code>
   */
  com.google.publicalerts.cap.GroupOrBuilder getIncidentsOrBuilder();

  /**
   * <pre>
   * The container for all component parts of the info sub-element of the
   * alert message.
   * If targeting of multiple "info" blocks in the same language overlaps,
   * information in later blocks may expand but may not override the
   * corresponding values in earlier ones. Each set of "info" blocks
   * containing the same language identifier SHALL be treated as a separate
   * sequence.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info info = 16;</code>
   */
  java.util.List<com.google.publicalerts.cap.Info> 
      getInfoList();
  /**
   * <pre>
   * The container for all component parts of the info sub-element of the
   * alert message.
   * If targeting of multiple "info" blocks in the same language overlaps,
   * information in later blocks may expand but may not override the
   * corresponding values in earlier ones. Each set of "info" blocks
   * containing the same language identifier SHALL be treated as a separate
   * sequence.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info info = 16;</code>
   */
  com.google.publicalerts.cap.Info getInfo(int index);
  /**
   * <pre>
   * The container for all component parts of the info sub-element of the
   * alert message.
   * If targeting of multiple "info" blocks in the same language overlaps,
   * information in later blocks may expand but may not override the
   * corresponding values in earlier ones. Each set of "info" blocks
   * containing the same language identifier SHALL be treated as a separate
   * sequence.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info info = 16;</code>
   */
  int getInfoCount();
  /**
   * <pre>
   * The container for all component parts of the info sub-element of the
   * alert message.
   * If targeting of multiple "info" blocks in the same language overlaps,
   * information in later blocks may expand but may not override the
   * corresponding values in earlier ones. Each set of "info" blocks
   * containing the same language identifier SHALL be treated as a separate
   * sequence.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info info = 16;</code>
   */
  java.util.List<? extends com.google.publicalerts.cap.InfoOrBuilder> 
      getInfoOrBuilderList();
  /**
   * <pre>
   * The container for all component parts of the info sub-element of the
   * alert message.
   * If targeting of multiple "info" blocks in the same language overlaps,
   * information in later blocks may expand but may not override the
   * corresponding values in earlier ones. Each set of "info" blocks
   * containing the same language identifier SHALL be treated as a separate
   * sequence.
   * </pre>
   *
   * <code>repeated .publicalerts.cap.Info info = 16;</code>
   */
  com.google.publicalerts.cap.InfoOrBuilder getInfoOrBuilder(
      int index);
}
